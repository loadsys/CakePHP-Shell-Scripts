#!/usr/bin/env php
<?php

//----------
function usage()
{
	$script = basename(__FILE__);
	echo <<<EOT

${script}
    Uses the Config/database.php file to execute a mysqldump of the
    default database into a ZIP file located in a backups/ folder
    created in the project root (if necessary). Outputs the ZIP
    file's size as a crude verification step. Should be run from
    the project root folder. Will exit with an error code of 1 if
    database credentials could not be obtained from the Cake app
    via the `db-credentials` script.

Usage:
    bin/${script}


EOT;

	exit(0);
}
if (isset($argv[1]) && $argv[1] == '-h') {
	usage();
}


// Set up variables.
$dir = getcwd();
$backupDir = $dir . '/backups';
$date = date('Ymd-His');
try {
	$db = new DbConfig();
} catch (Exception $e) {
	exit(1);
}

// Create an appropriate password clause for the command line.
if (empty($db->default['password'])) {
	$passClause = '';
} else {
	$passClause = ' --password=' . escapeshellcmd($db->default['password']);
}

// Create the backup directory if it doesn't exist.
if(!file_exists($backupDir) || !is_dir($backupDir)) {
	mkdir($backupDir, 0777);
}

// Build the command lines to execute.
$sqlFile = $backupDir . "/{$db->default['database']}_{$date}.sql";
$zipFile = "{$sqlFile}.zip";
$dumpCmd = "mysqldump --host={$db->default['host']} --user={$db->default['login']}{$passClause} {$db->default['database']} > {$sqlFile}\n";
$compressCmd = "zip -jrq8 {$zipFile} {$sqlFile}; rm {$sqlFile}";
//echo $db->default['database'] . ' ' . $db->default['login'] . ' ' . $db->default['password'] . "\n";

// Execute the commands.
echo "## Backing up database '{$db->default['database']}' to: {$zipFile}\n";
system($dumpCmd);
system($compressCmd);
echo "## Database backup complete: " . human_filesize(filesize($zipFile)) . PHP_EOL;

//----------
function human_filesize($bytes, $decimals = 2) {
	$sz = 'BKMGTP';
	$factor = floor((strlen(intval($bytes)) - 1) / 3);
	return (sprintf("%.{$decimals}f", intval($bytes) / pow(1024, $factor)) + 0) . @$sz[$factor];
}

//----------
class DbConfig {
	public $default = array();
	public function __construct() {
		$dir = getcwd();
		$cmd = escapeshellcmd("{$dir}/bin/db-credentials");
		$response = array();
		$code = 0;
		exec($cmd, $response, $code);

		if (empty($response) || $code > 0) {
			throw new RuntimeException('Unable to fetch Database config from db-credentials.');
		}

		foreach ($response as $line) {
			if (!substr_count($line, '=')) {
				continue;
			}
			list($key, $val) = explode('=', $line, 2);
			$key = strtolower(str_replace('DB_', '', $key));
			$val = substr($val, 1, -1);
			$this->default[$key] = $val;
		}

		if (empty($this->default)) {
			throw new RuntimeException('No Database config found.');
		}
	}
}
