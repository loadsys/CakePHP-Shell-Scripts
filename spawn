#!/usr/bin/env bash

#---------------------------------------------------------------------
usage ()
{
	cat <<EOT

${0##*/}  
    Automates the process of spawning new projects from the 
    CakePHP-Skeleton project.

    Before running this, you should have two local databases set up for 
    the development and test versions of the project. Look at README.md 
    for details.

Usage:
    ${0##*/} <cake core path> <new app path> <git remote URL>

	$1 = Absolute path to lib/Cake. Must be Cake v2.3.0 or higher.
	$2 = Path to the folder you want to create the new project in.
	$3 = Remote git repo URL to add as the 'origin' for the new project.


EOT

	exit 0
}
if [ "$1" = '-h' ]; then
	usage
fi


# Set paths.
DIR="$( cd -P "$( dirname "$0" )"/.. && pwd )";
DIR_TMP="${DIR}/tmp"
DIR_SKELETON_SEED="cakeskel"

# Input checking.
if [ -z "$1" ]; then
	echo "!! No Cake core path provided."  >&2
	usage
	exit 1
fi

if [ -d "$1" ]; then
	echo "## Setting Cake core path to: ${1}" >&2
	DIR_CAKE_CORE=$1
else
	echo "!! Bad Cake core path provided."  >&2
	usage
	exit 1
fi

if [ -n "$2" ]; then
	echo "## Setting new app path to: ${2}" >&2
	DIR_NEW_APP=$2
else
	echo "!! No path provided for new app."  >&2
	usage
	exit 1
fi

if [ -n "$3" ]; then
	echo "## Setting git repo URL to: ${3}" >&2
	URL_REPO=$3
else
	echo "!! No remote git repo URL provided."  >&2
	usage
	exit 1
fi


# Clean up from a previous run.
if [ -f "${DIR_TMP}/archive.zip" ]; then
	echo "## Cleaning up old archive.zip from a previous run." >&2
	rm -f ${DIR_TMP}/archive.zip
fi
if [ -d "${DIR_TMP}/${DIR_SKELETON_SEED}" ]; then
	echo "## Cleaning up old skeleton seed copy from a previous run." >&2
	rm -rf ${DIR_TMP}/${DIR_SKELETON_SEED}
fi


echo "## Creating skeleton seed copy at: ${DIR_TMP}/${DIR_SKELETON_SEED}" >&2
cd $DIR
git archive HEAD --format=zip > ${DIR_TMP}/archive.zip
cd ${DIR_TMP}
unzip -qd ${DIR_SKELETON_SEED} archive.zip


echo "## Tweaking the skeleton seed copy before baking." >&2
rm -f ${DIR_TMP}/${DIR_SKELETON_SEED}/bin/${0##*/}
cp ${DIR_TMP}/${DIR_SKELETON_SEED}/Config/core.php.default ${DIR_TMP}/${DIR_SKELETON_SEED}/Config/core.php


echo "## Creating destination folder: ${DIR_NEW_APP}" >&2
mkdir -p ${DIR_NEW_APP}/Lib


echo "## Linking Cake core at: ${DIR_NEW_APP}/Lib/Cake" >&2
#ln -s ${DIR_CAKE_CORE}/lib/Cake ${DIR_NEW_APP}/Lib/Cake
ln -s ${DIR_CAKE_CORE}/lib/Cake ${DIR_NEW_APP}/lib/Cake


echo "## Baking new project. (Ignore any warnings about CAKE_CORE_INCLUDE_PATH.)" >&2
cd `dirname ${DIR_NEW_APP}`
${DIR_NEW_APP}/Lib/Cake/Console/cake bake project --skel ${DIR_TMP}/${DIR_SKELETON_SEED} ${DIR_NEW_APP}

cd ${DIR_NEW_APP}
cp ${DIR_NEW_APP}/Config/core.php ${DIR_NEW_APP}/Config/core.php.default
sed -e '1,/---/d;/---/,$p' -i '' "${DIR_NEW_APP}/README.md"

#@TODO: Offer to write database.php settings for you. If [y], prompt for each input (host, dbname, user, pass, prefix)  then run bin/db-writeconfig. Remove #1 in list below when this is automated.

#@TODO: Offer to run schema generate -f. Remove #2 below when this is complete.

echo "## Setting up git repo for new project." >&2
git init
git remote add origin ${URL_REPO}


echo "## Done. You should:" >&2
echo "##    - Set up Config/database.php." >&2
echo "##    - Run \`Console/cake schema generate -f\`." >&2
echo "##    - Add project information to the README.md file." >&2
echo "##    - Commit and push everything to the remote repo." >&2


