#!/usr/bin/env bash

#---------------------------------------------------------------------
usage ()
{
	cat <<EOT

${0##*/}
    Convenience wrapper around code sniffing tool. If $1 is provided, a
    summary and full reports will be generated, rather than being output
    to the standard output.

Usage:
    bin/${0##*/} [save reports]

    Specify 'y' as the first argument to save reports in the tmp directory,
    else full and summary reports are generated but not saved to a file.


EOT

	exit 0
}
if [ "$1" = '-h' ]; then
	usage
fi

umask a+rw

DIR="$( cd -P "$( dirname "$0" )"/.. >/dev/null 2>&1 && pwd )"
BIN_DIR="${DIR}/bin"
TMP_DIR="${DIR}/tmp"
REPORT_DIR="${TMP_DIR}/reports"

FULL_REPORT_FILE="${REPORT_DIR}/full-codesniff.txt"
SUMMARY_REPORT_FILE="${REPORT_DIR}/summary-codesniff.txt"
SNIFF_FOLDERS=("${DIR}/Controller" "${DIR}/Model" "${DIR}/View" "${DIR}/Lib")

test -n "$1"
SAVE_REPORTS=$?

# Bail out if phpcs isn't available to us
PHPCS="$( which phpcs )"
if [ $? -gt 0 ]; then
	PHPCS="$BIN_DIR/phpcs"
	test -x $PHPCS
fi
if [ $? -gt 0 ]; then
	echo "!! The 'phpcs' command was not found on this system."
	echo ""
	exit 1
fi
echo "## Found phpcs at: ${PHPCS}"

if [ $SAVE_REPORTS ]; then
	# Generate Full and Summary Reports and save to a file.
	COVERAGE="--report-full=${FULL_REPORT_FILE} --report-summary=${SUMMARY_REPORT_FILE}"
	mkdir -p "$REPORT_DIR"
else
	# Generate Full and Summary Reports but print to screen.
	COVERAGE="--report-full --report-summary"
fi

$PHPCS -p --extensions=php --standard=CakePHP ${COVERAGE} ${SNIFF_FOLDERS[@]}

if [ $SAVE_REPORTS ] && [ $? -eq 0 ]; then
	echo "## Full report created at: ${FULL_REPORT_FILE}"
	echo "## Summary report created at: ${SUMMARY_REPORT_FILE}"
fi


#@TODO: Make use of new Loadsys code standard.
# Ref: https://github.com/loadsys/loadsys_codesniffer
# Example usage:
# bin/phpcs --standard=Vendor/loadsys/loadsys_codesniffer/Loadsys --report-summary -p --extensions=php Controller/ Model/ View/ Lib/